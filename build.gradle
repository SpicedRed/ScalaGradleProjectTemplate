apply plugin: 'scala'
apply from: 'integration-test.gradle'

jar {
  manifest {
    attributes 'Main-Class': 'net.nelanka.sample.main.Main'
  }
}

task fatJar(type: Jar) {
  manifest {
    attributes 'Implementation-Title': 'Gradle Jar File Example',  
    'Implementation-Version': version,
    'Main-Class': 'net.nelanka.sample.main.Main'
  }
  baseName = project.name + '-all'
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
}

repositories{
    mavenCentral()
}

ext {
	scalaVersion = '2.11'
	scalaMinorVersion = '5'

  junitVersion = '4.12'
  scalacticVersion = '2.2.4'
  scalaCheckVersion = '1.12.1'
}

dependencies {
	compile "org.scala-lang:scala-library:$scalaVersion.$scalaMinorVersion"
	compile "org.scalactic:scalactic_$scalaVersion:$scalacticVersion"

  testCompile "junit:junit:$junitVersion"
  testCompile "org.scalatest:scalatest_$scalaVersion:$scalacticVersion"
  testCompile "org.scalacheck:scalacheck_$scalaVersion:$scalaCheckVersion"
}

// Creates a gradle task called 'run' which allows us to run Main
task run(type: JavaExec, dependsOn: classes) {
    main = 'net.nelanka.sample.main.Main'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

test {
  useJUnit()

  testLogging {
    events "passed", "skipped", "failed"
  }

  // always run tests
  outputs.upToDateWhen { false }
}
